<?php

function usasearch_admin() {
  $form = array();

  $form['usasearch_affiliate_name'] = array(
    '#type' => 'textfield',
    '#title' => t('Affiliate name'),
    '#default_value' => variable_get('usasearch_affiliate_name', ''),
    '#size' => 30,
    '#maxlength' => 30,
    '#description' => t("Please enter your affiliate name provided by") . " <a href=\"http://search.usa.gov\">USASearch</a>, eg. \"example.gov\".",
    '#required' => TRUE,
  );
  $form['usasearch_action_domain'] = array(
    '#type' => 'textfield',
    '#title' => t('Search domain'),
    '#default_value' => variable_get('usasearch_action_domain', 'search.usa.gov'),
    '#size' => 30,
    '#maxlength' => 50,
    '#description' => t("You may enter a custom search domain, eg. search.commerce.gov, or leave the default search.usa.gov. This will change the search form action to submit search requests to the search domain entered. <strong>NOTE: Only change this if USASearch has configured this option for your search affiliate!</strong>"),
    '#required' => FALSE,
  );
  $form['usasearch_search_page'] = array(
    '#type' => 'checkbox',
    '#title' => t('Enable Drupal search page'),
    '#default_value' => variable_get('usasearch_search_page', 0),
    '#description' => t("To make best use of the USASearch module on your site the 'Search box' option should be enabled in the <a href=" . base_path() . "admin/build/themes/settings>global theme settings</a> or in your default theme settings or the search block placed on your site. Check this option if you want to also enable the Drupal search page at /search instead of redirecting this to USASearch. If you do neither of these the USASearch module won't be of much use."),
    '#required' => FALSE,
  );
  $form['usasearch_typeahead_options'] = array(
    '#type' => 'fieldset',
    '#title' => t('Type-ahead search settings'),
    '#collapsible' => TRUE,
    '#collapsed' => FALSE,
    '#description' => 'Type-ahead for USASearch allows visitors to quickly see search suggestions as they type their search. Learn <a href="https://search.usa.gov/affiliates/how_it_works">how it works</a>. Also see instructions on <a href="http://searchsupport.usa.gov/entries/219044-how-to-implement-search-as-you-type-say">how we implemented type-ahead search</a> in this module.',
  );
  $form['usasearch_typeahead_options']['usasearch_typeahead'] = array(
    '#type' => 'checkbox',
    '#title' => t('Enable Type-ahead'),
    '#default_value' => variable_get('usasearch_typeahead', 1),
    '#description' => t("Uncheck this option if you want to disable the type-ahead search feature."),
    '#required' => FALSE,
  );
  $form['usasearch_typeahead_options']['usasearch_affiliate_id'] = array(
    '#type' => 'textfield',
    '#title' => t('Type-ahead affiliate ID'),
    '#default_value' => variable_get('usasearch_affiliate_id', ''),
    '#size' => 4,
    '#maxlength' => 4,
    '#description' => "Please enter the affiliate ID provided by <a href=\"http://search.usa.gov\">USASearch</a>, eg. \"77\", to limit the type-ahead search suggestions to those in your affiliate.",
    '#required' => FALSE,
  );

  return system_settings_form($form);
}

/**
 * Implements hook_preprocess_page() in order to output required javascript and css references.
 */
function usasearch_preprocess_page(&$variables) {
  // Check for usasearch_typeahead variable, if set output javascript and css references.
  // Detailed info about this USASearch feature here: http://searchsupport.usa.gov/entries/219044-how-to-implement-search-as-you-type-say#overview
  if (variable_get('usasearch_typeahead', 1)) {
    // Add external scripts into $variables['head'], instead of $variables['scripts'], due to jquery_update module, any 6-2x version as of 12/29/2011, clobbering $variables['scripts'].
    // This also means we need to defer the script loading so that they see the jquery javascript since these lines will print before the jquery script include.
    // See jquery_update module issue http://drupal.org/node/965680 for more information and to check the status of this problem.
    $variables['head'] .= '<script type="text/javascript" defer="defer" src="http://search.usa.gov/javascripts/jquery/jquery.autocomplete.min.js"></script>' . "\n";
    $variables['head'] .= '<script type="text/javascript" defer="defer" src="http://search.usa.gov/javascripts/sayt.js"></script>' . "\n";
    // Add external css.
    $variables['styles'] .= '<link type="text/css" rel="stylesheet" media="all" href="http://search.usa.gov/stylesheets/compiled/sayt.css" />' . "\n";

    // Check for usasearch_affiliate_id variable, if set output javascript inline WITH affilite id to limit suggestions.
    if ($affiliate_id = check_plain(variable_get('usasearch_affiliate_id', ''))) {
      drupal_add_js("var usagov_sayt_url = 'http://search.usa.gov/sayt?aid=$affiliate_id&'", 'inline');
    }
    // Otherwise use all search.usa.gov type-ahead suggestions.
    else {
      drupal_add_js("var usagov_sayt_url = 'http://search.usa.gov/sayt'", 'inline');
    }
  }
}

/**
 * Page callback function to redirect requests to usasearch.
 */
function redirect_to_usasearch($query = '') {
  // Set action_domain from variables table or default to search.usa.gov.
  $action_domain = check_plain(variable_get('usasearch_action_domain', 'search.usa.gov'));
  // Set affiliate_name from variables table, checking for a value using ternary operator.
  $affiliate_name = variable_get('usasearch_affiliate_name', '')?'affiliate=' . check_plain(variable_get('usasearch_affiliate_name', '')):'';
  // Check for query terms and use them in redirect if there.
  if ($query) {
    drupal_goto("http://$action_domain/search", 'query=' . filter_xss($query) . ($affiliate_name?"&$affiliate_name":''));
  }
  else {
    drupal_goto("http://$action_domain/search", $affiliate_name);
  }
}

/**
 * Implements hook_menu(). Add admin screen under settings.
 */
function usasearch_menu() {
  $items = array();

  $items['admin/settings/usasearch'] = array(
    'title' => 'USASearch settings',
    'description' => 'Contains settings for customizing site search to use USASearch',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('usasearch_admin'),
    'access arguments' => array('access administration pages'),
    'type' => MENU_NORMAL_ITEM,
  );
  return $items;
}

/**
 * Implements hook_menu_alter(). Point /search and /search/node/% paths to callback which redirects to usasearch.
 */
function usasearch_menu_alter(&$items) {
  if (variable_get('usasearch_search_page', 0)) {
  }
  else {
    $items['search'] = array(
      'access arguments' => array('search content'),
      'description' => t('Search Results'),
      'page callback' => 'redirect_to_usasearch',
      'type' => MENU_CALLBACK,
    );

    $items['search/node/%'] = array(
      'access arguments' => array('search content'),
      'description' => t('Search Results'),
      'page callback' => 'redirect_to_usasearch',
      'page arguments' => array(2),
      'type' => MENU_CALLBACK,
  );
  }
}

/**
 * Implements hook_form_alter().
 * Changes the search block and search theme forms and elements.
 */
function usasearch_form_alter(&$form, &$form_state, $form_id) {
  // Search block and search box have similar form structure.
  if ($form_id == 'search_block_form' || $form_id == 'search_theme_form' || $form_id == 'search_form') {
    // Set action method, location and read affiliate from variable
    $form['#method'] = 'get';
    $form['#action'] = 'http://' . check_plain(variable_get('usasearch_action_domain', 'search.usa.gov')) . '/search';
    // Check for affiliate_name variable before printing the affiliate form element
    if ($affiliate_name = check_plain(variable_get('usasearch_affiliate_name', ''))) {
      $form['affiliate'] = array('#type' => 'hidden', '#value' => $affiliate_name);
    }
    // Remove unnecessary, hidden input fields
    unset($form['form_build_id']);
    unset($form['form_token']);
    unset($form['form_id']);

    if ($form_id == 'search_form') {
      // Change text field name to query and unset advanced search in search_form
      $form['basic']['inline']['keys']['#name'] = 'query';
      unset($form['advanced']);
      // Add autocomplete classes and set autocomplete HTML attribute to off on text field for type-ahead feature
      if (variable_get('usasearch_typeahead', 1)) {
        $form['basic']['inline']['keys']['#attributes'] = array('class' => 'usagov-search-autocomplete ui-autocomplete-input ui-corner-all', 'autocomplete' => 'off');
      }
    }
    else {
      // Change text field name to query and title in search_block_form and search_theme_form
      $form[$form_id]['#name'] = 'query';
      $form[$form_id]['#title'] = t('Search using USASearch');
      // Add autocomplete classes and set autocomplete HTML attribute to off on text field for type-ahead feature
      if (variable_get('usasearch_typeahead', 1)) {
        $form[$form_id]['#attributes'] = array('class' => 'usagov-search-autocomplete ui-autocomplete-input ui-corner-all', 'autocomplete' => 'off');
      }
    }
  }
}
